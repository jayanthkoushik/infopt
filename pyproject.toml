[tool.black]
line-length = 88
target-version = ["py36"]

[tool.isort]
line_length = 88
force_grid_wrap = 0
multi_line_output = 3
use_parentheses = true
include_trailing_comma = true
combine_as_imports = true
force_alphabetical_sort_within_sections = true
known_shiny = "shinyutils"
import_heading_shiny = "Must be imported before GPy to configure matplotlib"
sections = "FUTURE,STDLIB,SHINY,THIRDPARTY,FIRSTPARTY,LOCALFOLDER"

[tool.pylint.MASTER]
extension-pkg-whitelist = "torch"

[tool.pylint.TYPECHECK]
generated-members = "torch.*"

[tool.pylint.FORMAT]
max-line-length = "88"

[tool.pylint.'MESSAGES CONTROL']
disable = """
    too-few-public-methods,
    too-many-instance-attributes,
    too-many-arguments,
    too-many-locals,
    too-many-statements,
    too-many-branches,
    bad-continuation,
    missing-docstring,
    invalid-name,
    protected-access,
    wrong-import-position,
    logging-format-interpolation,
    logging-fstring-interpolation,
    arguments-differ
"""

[tool.poetry]
name = "infopt"
version = "1.0.0"
description = "Black-box optimization with influence functions"
authors = ["Jayanth Koushik <jnkoushik@gmail.com>"]
license = "MIT"
readme = "README.md"
repository = "https://github.com/jayanthkoushik/infopt"
packages = [
    { include = "infopt" },
    { include = "tests", format = "sdist" },
]

keywords = [
    "bayesian optimization",
    "black-box optimization",
    "influence function",
    "optimization"
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Natural Language :: English",
    "Operating System :: OS Independent",
    "Topic :: Scientific/Engineering :: Mathematics",
]

[tool.poetry.dependencies]
python = "^3.6.1"
gpyopt = "^1.2.6"
numpy = "^1.19.1"
matplotlib = "^3.3.1"
torch = "^1.5.1"

scipy = {version = "^1.5.2", optional = true}
tensorboard = {version = "^2.3.0", optional = true}
scikit-learn = {version = "^0.23.2", optional = true}
scikit-image = {version = "^0.17.2", optional = true}
tqdm = {version = "^4.48.2", optional = true}
pandas = {version = "^1.1.1", optional = true}
shinyutils = {extras = ["color", "plotting"], version = "^4.1.8", optional = true}
jupyter = {version = "^1.0.0", optional = true}

[tool.poetry.extras]
test = ["scipy", "tensorboard"]
experiments = [
    "tensorboard",
    "scikit-image",
    "scikit-learn",
    "tqdm",
    "pandas",
    "shinyutils",
    "jupyter",
]

[tool.poetry.dev-dependencies]
black = "^19.10b0"
pylint = "^2.6.0"
bump2version = "^1.0"
pre-commit = "^2.7.1"
isort = "^5.4.2"

[build-system]
requires = ["poetry>=1.0"]
build-backend = "poetry.masonry.api"
